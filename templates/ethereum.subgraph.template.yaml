specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
# *******************************************************************************************
# ***********   C H A I N L I N K   *********************************************************
# *******************************************************************************************
# @dev-1: linked only to DAI/USD aggregator, but listening to the hourly answerUpdated
# event to update DAI, USDC & USDT based on contract call latestRoundData() on each
# corresponding aggregator
# @dev-2: calcs for vault & strategy data rely on stablecoin events, so handling them would
# kill the overall performance. Instead, data from vaults & adapters is retrieved every 1h
# directly through contract calls
  - kind: ethereum/contract
    name: ChainlinkAggregator
    network: {{network}}
    source:
      address: "{{ChainlinkAggregatorAddress}}"
      abi: AccessControlledOffchainAggregator
      startBlock: {{ChainlinkAggregatorStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
      abis:
        - name: AccessControlledOffchainAggregator
          file: ./abis/ethereum/ChainlinkAggregatorProxy.json
        - name: Vyper_contract
          file: ./abis/ethereum/Vault.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: WeightedPool
          file: ./abis/ethereum/BalancerGroWethPool.json
        - name: ThreePool
          file: ./abis/ethereum/ThreePool.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdated
      file: ./src/mappings/chainlink.ts
# *******************************************************************************************
# ***********   P N L   *********************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: PnL
    network: {{network}}
    source:
      address: "{{PnLAddress}}"
      abi: PnL
      startBlock: {{PnLStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - Factors
      abis:
        - name: PnL
          file: ./abis/ethereum/PnL.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogPnLExecution(uint256,int256,int256,int256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handlePnLExecution
      file: ./src/mappings/pnl.ts
# *******************************************************************************************
# ***********   D E P O S I T   H A N D L E R S   *******************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: DepositHandlerV1
    network: {{network}}
    source:
      address: "{{DepositHandlerV1Address}}"
      abi: DepositHandler
      startBlock: {{DepositHandlerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[])
          handler: handleDepositV1
          receipt: true
      file: ./src/mappings/depositHandler.ts
  - kind: ethereum/contract
    name: DepositHandlerV2
    network: {{network}}
    source:
      address: "{{DepositHandlerV2Address}}"
      abi: DepositHandler
      startBlock: {{DepositHandlerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[3])
          handler: handleDepositV2
          receipt: true
      file: ./src/mappings/depositHandler.ts
  - kind: ethereum/contract
    name: DepositHandlerV3
    network: {{network}}
    source:
      address: "{{DepositHandlerV3Address}}"
      abi: DepositHandler
      startBlock: {{DepositHandlerV3StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV3.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[3])
          handler: handleDepositV3
          receipt: true
      file: ./src/mappings/depositHandler.ts
# *******************************************************************************************
# ***********   W I T H D R A W A L   H A N D L E R S   *************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: WithdrawHandlerV1
    network: {{network}}
    source:
      address: "{{WithdrawHandlerV1Address}}"
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[])
          handler: handleWithdrawalV1
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
    name: WithdrawHandlerV2
    network: {{network}}
    source:
      address: "{{WithdrawHandlerV2Address}}"
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[3])
          handler: handleWithdrawalV2
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
    name: WithdrawHandlerV3
    network: {{network}}
    source:
      address: "{{WithdrawHandlerV3Address}}"
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV3StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV3.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[3])
          handler: handleWithdrawalV3
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
# *******************************************************************************************
# ***********   E M E R G E N C Y   H A N D L E R S   ***************************************
# *******************************************************************************************
# @dev: only V3 of EmergencyHandler had some withdrawal events, so no need to add versions 1 & 2
    name: EmergencyHandlerV3
    network: {{network}}
    source:
      address: "{{EmergencyHandlerV3Address}}"
      abi: EmergencyHandler
      startBlock: {{EmergencyHandlerV3StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - Factor
        - CoreData
        - TransferTx
      abis:
        - name: EmergencyHandler
          file: ./abis/ethereum/EmergencyHandlerV3.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogEmergencyWithdrawal()
          handler: handleEmergencyWithdrawalV3
          receipt: true
      file: ./src/mappings/emergencyHandler.ts
# *******************************************************************************************
# ***********   G V T   *********************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: Gvt
    network: {{network}}
    source:
      address: "{{GvtAddress}}"
      abi: ERC20
      startBlock: {{GvtStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Factor
        - Totals
        - CoreData
      abis:
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
          receipt: true
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/gvt.ts
# *******************************************************************************************
# ***********   P W R D   *******************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: Pwrd
    network: {{network}}
    source:
      address: "{{PwrdAddress}}"
      abi: ERC20
      startBlock: {{PwrdStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Factor
        - Totals
        - CoreData
      abis:
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/pwrd.ts
# *******************************************************************************************
# ***********   G R O   *********************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: Gro
    network: {{network}}
    source:
      address: "{{GroAddress}}"
      abi: Gro
      startBlock: {{GroStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Price
        # - Totals
      abis:
        - name: Gro
          file: ./abis/ethereum/Gro.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/gro.ts
# *******************************************************************************************
# ***********   S T A K E R   ***************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: LpTokenStakerV1
    network: {{network}}
    source:
      address: "{{LpTokenStakerV1Address}}"
      abi: LpTokenStaker
      startBlock: {{LpTokenStakerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Pools
        - ClaimTx
      abis:
        - name: LpTokenStaker
          file: ./abis/ethereum/LpTokenStakerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogClaim(indexed address,indexed uint256,uint256)
          handler: handleClaimV1
        - event: LogDeposit(indexed address,indexed uint256,uint256)
          handler: handleDepositV1
        - event: LogWithdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdrawV1
        - event: LogAddPool(indexed uint256,uint256,indexed address)
          handler: handleAddPoolV1
        - event: LogSetPool(indexed uint256,uint256)
          handler: handleSetPoolV1
        - event: LogUpdatePool(indexed uint256,uint256,uint256,uint256)
          handler: handleUpdatePoolV1
          receipt: true
        - event: LogGroPerBlock(uint256)
          handler: handleGroPerBlockV1
      file: ./src/mappings/staker.ts
  - kind: ethereum/contract
    name: LpTokenStakerV2
    network: {{network}}
    source:
      address: "{{LpTokenStakerV2Address}}"
      abi: LpTokenStaker
      startBlock: {{LpTokenStakerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Pools
        - ClaimTx
        - DepositTx
        - WithdrawalTx
      abis:
        - name: LpTokenStaker
          file: ./abis/ethereum/LpTokenStakerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogClaim(indexed address,bool,indexed uint256,uint256)
          handler: handleClaimV2
        - event: LogMultiClaim(indexed address,bool,uint256[],uint256)
          handler: handleMultiClaimV2
        - event: LogDeposit(indexed address,indexed uint256,uint256)
          handler: handleDepositV2
        - event: LogWithdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdrawV2
        - event: LogAddPool(indexed uint256,uint256,indexed address)
          handler: handleAddPoolV2
        - event: LogSetPool(indexed uint256,uint256)
          handler: handleSetPoolV2
        - event: LogUpdatePool(indexed uint256,uint256,uint256,uint256)
          handler: handleUpdatePoolV2
          receipt: true
        - event: LogGroPerBlock(uint256)
          handler: handleGroPerBlockV2
      file: ./src/mappings/staker.ts
# *******************************************************************************************
# ***********   P O O L S  ******************************************************************
# *******************************************************************************************
  # Pool 1 : UniswapV2 50% GVT - 50% GRO
  - kind: ethereum/contract
    name: UniswapV2PairGvtGro
    network: {{network}}
    source:
      address: "{{UniswapV2GvtGroAddress}}"
      abi: UniswapV2Pair
      startBlock: {{UniswapV2GvtGroStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwapGvtGro
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferGvtGro
      file: ./src/mappings/uniswapV2Pair.ts
  # Pool 2 : UniswapV2 50% GRO - 50% USDC
  - kind: ethereum/contract
    name: UniswapV2PairGroUsdc
    network: {{network}}
    source:
      address: "{{UniswapV2GroUsdcAddress}}"
      abi: UniswapV2Pair
      startBlock: {{UniswapV2GroUsdcStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwapGroUsdc
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferGroUsdc
      file: ./src/mappings/uniswapV2Pair.ts
  # Pool 4 : Curve Metapool 50% 3CRV - 50% PWRD
  - kind: ethereum/contract
    name: CurveMetapool3CRV
    network: {{network}}
    source:
      address: "{{CurveMetapool3CRVAddress}}"
      abi: Vyper_contract
      startBlock: {{CurveMetapool3CRVStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/CurveMetapool3CRV.json
      eventHandlers:
        - event: TokenExchange(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchange
        - event: TokenExchangeUnderlying(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchangeUnderlying
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/curveMetapool3CRV.ts
  # Pool 5 : Balancer Vault 80% GRO - 20% WETH [VAULT]
  - kind: ethereum/contract
    name: BalancerGroWethVault
    network: {{network}}
    source:
      address: "{{BalancerGroWethVaultAddress}}"
      abi: Vault
      startBlock: {{BalancerGroWethVaultStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: Vault
          file: ./abis/ethereum/BalancerGroWethVault.json
        - name: WeightedPool
          file: ./abis/ethereum/BalancerGroWethPool.json
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: PoolBalanceChanged(indexed bytes32,indexed address,address[],int256[],uint256[])
          handler: handlePoolBalanceChanged
        # - event: Swap(indexed bytes32,indexed address,indexed address,uint256,uint256)
        #   handler: handleSwap
      file: ./src/mappings/balancerGroWeth.ts
  # Pool 5 : Balancer Vault 80% GRO - 20% WETH [POOL]
  - kind: ethereum/contract
    name: BalancerGroWethPool
    network: {{network}}
    source:
      address: "{{BalancerGroWethPoolAddress}}"
      abi: WeightedPool
      startBlock: {{BalancerGroWethPoolStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
        - name: Vault
          file: ./abis/ethereum/BalancerGroWethVault.json
        - name: WeightedPool
          file: ./abis/ethereum/BalancerGroWethPool.json
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/balancerGroWeth.ts
# *******************************************************************************************
# ***********   G R O   H O D L E R   *******************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: GROHodlerV1
    network: {{network}}
    source:
      address: "{{HodlerV1Address}}"
      abi: GROHodler
      startBlock: {{HodlerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - VestingBonus
      abis:
        - name: GROHodler
          file: ./abis/ethereum/GROHodlerV1.json
      eventHandlers:
        - event: LogBonusClaimed(address,uint256)
          handler: handleBonusClaimedV1
      file: ./src/mappings/hodler.ts
  - kind: ethereum/contract
    name: GROHodlerV2
    network: {{network}}
    source:
      address: "{{HodlerV2Address}}"
      abi: GROHodler
      startBlock: {{HodlerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - VestingBonus
      abis:
        - name: GROHodler
          file: ./abis/ethereum/GROHodlerV2.json
      eventHandlers:
        - event: LogBonusClaimed(indexed address,bool,uint256)
          handler: handleBonusClaimedV2
      file: ./src/mappings/hodler.ts
# *******************************************************************************************
# ***********   G R O   V E S T I N G   *****************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: GROVestingV1
    network: {{network}}
    source:
      address: "{{VestingV1Address}}"
      abi: GROVesting
      startBlock: {{VestingV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - MasterData
        - VestingBonus
      abis:
        - name: GROVesting
          file: ./abis/ethereum/GROVestingV1.json
      eventHandlers:
        - event: LogVest(indexed address,uint256,uint256,(uint256,uint256))
          handler: handleVestV1
        - event: LogExit(indexed address,uint256,uint256,uint256,uint256)
          handler: handleExitV1
        - event: LogExtend(indexed address,uint256,(uint256,uint256))
          handler: handleExtendV1
      file: ./src/mappings/vesting.ts
  - kind: ethereum/contract
    name: GROVestingV2
    network: {{network}}
    source:
      address: "{{VestingV2Address}}"
      abi: GROVesting
      startBlock: {{VestingV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - MasterData
        - VestingBonus
      abis:
        - name: GROVesting
          file: ./abis/ethereum/GROVestingV2.json
      eventHandlers:
        - event: LogVest(indexed address,uint256,uint256,(uint256,uint256))
          handler: handleVestV2
        - event: LogExit(indexed address,uint256,uint256,uint256,uint256)
          handler: handleExitV2
        - event: LogInstantExit(indexed address,uint256,uint256)
          handler: handleInstantExitV2
        - event: LogExtend(indexed address,uint256,(uint256,uint256))
          handler: handleExtendV2
        - event: LogNewInitUnlockedPercent(uint256)
          handler: handleLogNewInitUnlockedPercentV2     
      file: ./src/mappings/vesting.ts
  - kind: ethereum/contract
    name: GROTeamVesting
    network: {{network}}
    source:
      address: "{{VestingTeamAddress}}"
      abi: GROTeamVesting
      startBlock: {{VestingTeamStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Totals
      abis:
        - name: GROTeamVesting
          file: ./abis/ethereum/GROTeamVesting.json
      eventHandlers:
        - event: LogClaimed(indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleClaimed
        - event: LogNewVest(indexed address,indexed uint256,uint256)
          handler: handleNewVest
        - event: LogStoppedVesting(indexed address,indexed uint256,uint256,uint256)
          handler: StoppedVesting
      file: ./src/mappings/vestingTeam.ts
# *******************************************************************************************
# ***********   V A U L T S   ***************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: VaultDAI
    network: {{network}}
    source:
      address: "{{VaultDAIAddress}}"
      abi: Vyper_contract
      startBlock: {{VaultDAIStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/Vault.json
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
      eventHandlers:
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReportedDAI
      file: ./src/mappings/vaults.ts
  - kind: ethereum/contract
    name: VaultUSDC
    network: {{network}}
    source:
      address: "{{VaultUSDCAddress}}"
      abi: Vyper_contract
      startBlock: {{VaultUSDCStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/Vault.json
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
      eventHandlers:
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReportedUSDC
      file: ./src/mappings/vaults.ts
  - kind: ethereum/contract
    name: VaultUSDT
    network: {{network}}
    source:
      address: "{{VaultUSDTAddress}}"
      abi: Vyper_contract
      startBlock: {{VaultUSDTStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/Vault.json
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
      eventHandlers:
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReportedUSDT
      file: ./src/mappings/vaults.ts
# *******************************************************************************************
# ***********   V A U L T   *****************************************************************
# *******************************************************************************************
# @dev: nothing to handle. All data will be retrieved by contract calls  
  - kind: ethereum/contract
    name: Vault
    network: {{network}}
    source:
      address: "{{VaultAddress}}"
      abi: Vyper_contract
      startBlock: {{VaultStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/Vault.json
      eventHandlers:
        - event: EmergencyShutdown(bool)
          handler: handleEmergencyShutdown
      file: ./src/mappings/vaults.ts
# *******************************************************************************************
# ***********   V A U L T   A D A P T E R S   ***********************************************
# *******************************************************************************************
# @dev: nothing to handle. All data will be retrieved by contract calls  
  - kind: ethereum/contract
    name: VaultAdapter
    network: {{network}}
    source:
      address: "{{VaultAdapterAddress}}"
      abi: Vyper_contract
      startBlock: {{VaultAdapterStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnership
      file: ./src/mappings/vaultAdapters.ts
# *******************************************************************************************
# ***********   C O N V E X   S T R A T E G I E S   *****************************************
# *******************************************************************************************
# @dev: generic strategy to perform contract calls  
  - kind: ethereum/contract
    name: ConvexStrategy
    network: {{network}}
    source:
      address: "{{ConvexStrategyAddress}}"
      abi: StableConvexXPool
      startBlock: {{ConvexStrategyStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: EmergencyExitEnabled()
          handler: handleEmergencyExitEnabled
      file: ./src/mappings/convexStrategies.ts
  - kind: ethereum/contract
    name: PrimaryStratDAI
    network: {{network}}
    source:
      address: "{{PrimaryStratDAIAddress}}"
      abi: StableConvexXPool
      startBlock: {{PrimaryStratDAIStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvestedPrimaryDAI
      file: ./src/mappings/convexStrategies.ts
  - kind: ethereum/contract
    name: SecondaryStratDAI
    network: {{network}}
    source:
      address: "{{SecondaryStratDAIAddress}}"
      abi: StableConvexXPool
      startBlock: {{SecondaryStratDAIStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvestedSecondaryDAI
      file: ./src/mappings/convexStrategies.ts
  - kind: ethereum/contract
    name: PrimaryStratUSDC
    network: {{network}}
    source:
      address: "{{PrimaryStratUSDCAddress}}"
      abi: StableConvexXPool
      startBlock: {{PrimaryStratUSDCStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvestedPrimaryUSDC
      file: ./src/mappings/convexStrategies.ts
  - kind: ethereum/contract
    name: SecondaryStratUSDC
    network: {{network}}
    source:
      address: "{{SecondaryStratUSDCAddress}}"
      abi: StableConvexXPool
      startBlock: {{SecondaryStratUSDCStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvestedSecondaryUSDC
      file: ./src/mappings/convexStrategies.ts
  - kind: ethereum/contract
    name: PrimaryStratUSDT
    network: {{network}}
    source:
      address: "{{PrimaryStratUSDTAddress}}"
      abi: StableConvexXPool
      startBlock: {{PrimaryStratUSDTStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Strategy
      abis:
        - name: StableConvexXPool
          file: ./abis/ethereum/ConvexStrategy.json
        - name: Vyper_contract
          file: ./abis/ethereum/VaultAdapter.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvestedPrimaryUSDT
      file: ./src/mappings/convexStrategies.ts
# *******************************************************************************************
# ***********   G R O U T E R   *************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: GRouter
    network: {{network}}
    source:
      address: "{{GRouterAddress}}"
      abi: GRouter
      startBlock: {{GRouterStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - CoreData
        - TransferTx
      abis:
        - name: GRouter
          file: ./abis/ethereum/GRouter.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogDeposit(indexed address,uint256,uint256,bool,uint256,uint256)
          handler: handleLogDeposit
        - event: LogLegacyDeposit(indexed address,uint256[3],bool,uint256,uint256)
          handler: handleLogLegacyDeposit
        - event: LogWithdrawal(indexed address,uint256,uint256,bool,uint256)
          handler: handleLogWithdrawal
      file: ./src/mappings/grouter.ts
# *******************************************************************************************
# ***********   G V A U L T   ***************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: GVault
    network: {{network}}
    source:
      address: "{{GVaultAddress}}"
      abi: GVault
      startBlock: {{GVaultStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Factor
        - GVaultStrategy
        - GVaultHarvest
        - StrategyWithdraw
        - StrategyQueue
      abis:
        - name: GVault
          file: ./abis/ethereum/GVault.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogStrategyHarvestReport(indexed address,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyHarvestReport
        - event: LogWithdrawalFromStrategy(uint48,uint256,uint256,uint256)
          handler: handleWithdrawalFromStrategy
        - event: LogStrategyAdded(indexed address,indexed uint256,uint256)
          handler: handleStrategyAdded
      file: ./src/mappings/gvault.ts
# *******************************************************************************************
# ***********   G T R A N C H E   ***********************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: GTranche
    network: {{network}}
    source:
      address: "{{GTrancheAddress}}"
      abi: GTranche
      startBlock: {{GTrancheStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TBC
      abis:
        - name: GTranche
          file: ./abis/ethereum/GTranche.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,uint256,uint256,indexed bool,uint256)
          handler: handleLogNewDeposit
        - event: LogNewWithdrawal(indexed address,indexed address,uint256,uint256,indexed bool,uint256,uint256)
          handler: handleLogNewWithdrawal
      file: ./src/mappings/gtranche.ts
# *******************************************************************************************
# ***********   P N L (G^2)   ***************************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: PnLG2
    network: {{network}}
    source:
      address: "{{PnLG2Address}}"
      abi: PnLFixedRate
      startBlock: {{PnLG2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TBC
      abis:
        - name: PnLFixedRate
          file: ./abis/ethereum/PnLG2.json
      eventHandlers:
        - event: LogNewFixedRate(int64)
          handler: handleLogNewFixedRate
        - event: LogNewPendingFixedRate(int64)
          handler: LogNewPendingFixedRate
      file: ./src/mappings/pnlg2.ts
# *******************************************************************************************
# ***********   S T O P - L O S S  L O G I C   **********************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: StopLossLogic
    network: {{network}}
    source:
      address: "{{StopLossLogicAddress}}"
      abi: StopLossLogic
      startBlock: {{StopLossLogicStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TBC
      abis:
        - name: StopLossLogic
          file: ./abis/ethereum/StopLossLogic.json
      eventHandlers:
        - event: LogStrategyUpdated(indexed address,uint128,uint128)
          handler: handleLogStrategyUpdated
      file: ./src/mappings/stoplosslogic.ts
# *******************************************************************************************
# ***********   C O N V E X  F R A X (G^2)   ************************************************
# *******************************************************************************************
  - kind: ethereum/contract
    name: ConvexFrax
    network: {{network}}
    source:
      address: "{{ConvexFraxAddress}}"
      abi: ConvexStrategy
      startBlock: {{ConvexFraxStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TBC
      abis:
        - name: ConvexStrategy
          file: ./abis/ethereum/ConvexFrax.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvested
      file: ./src/mappings/convexfrax.ts


# *******************************************************************************************
# ***********   S T A B L E C O I N S   *****************************************************
# *******************************************************************************************
  # - kind: ethereum/contract
  #   name: Dai
  #   network: {{network}}
  #   source:
  #     address: '{{DaiAddress}}'
  #     abi: Dai
  #     startBlock: {{DaiStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Dai
  #         file: ./abis/ethereum/Dai.json
  #       - name: ERC20
  #         file: ./abis/ethereum/ERC20.json
  #     eventHandlers:
  #       # - event: Approval(indexed address,indexed address,uint256)
  #       #   handler: handleApproval
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferUSDT
  #     file: ./src/mappings/Dai.ts
  # - kind: ethereum/contract
  #   name: Usdc
  #   network: {{network}}
  #   source:
  #     address: '{{UsdcAddress}}'
  #     abi: ERC20
  #     startBlock: {{UsdcStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Usdc
  #         file: ./abis/ethereum/Usdc.json
  #       - name: ERC20
  #         file: ./abis/ethereum/ERC20.json
  #     eventHandlers:
  #       # - event: Approval(indexed address,indexed address,uint256)
  #       #   handler: handleApproval
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferUSDT
  #     file: ./src/mappings/Usdc.ts
  # - kind: ethereum/contract
  #   name: Usdt
  #   network: {{network}}
  #   source:
  #     address: '{{UsdtAddress}}'
  #     abi: ERC20
  #     startBlock: {{UsdtStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Usdt
  #         file: ./abis/ethereum/Usdt.json
  #       - name: ERC20
  #         file: ./abis/ethereum/ERC20.json
  #     eventHandlers:
  #       # - event: Approval(indexed address,indexed address,uint256)
  #       #   handler: handleApproval
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferUSDT
  #     file: ./src/mappings/Usdt.ts




# *******************************************************************************************
# ***********   V A U L T   A D A P T E R S   ***********************************************
# *******************************************************************************************
  # - kind: ethereum/contract
  #   name: VaultAdapterDAI
  #   network: {{network}}
  #   source:
  #     address: "{{VaultAdapterDAIAddress}}"
  #     abi: Vyper_contract
  #     startBlock: {{VaultAdapterDAIStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Strategy
  #     abis:
  #       - name: Vyper_contract
  #         file: ./abis/ethereum/Vault.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferDAI
  #     file: ./src/mappings/vaultAdapters.ts
  # - kind: ethereum/contract
  #   name: VaultAdapterUSDC
  #   network: {{network}}
  #   source:
  #     address: "{{VaultAdapterUSDCAddress}}"
  #     abi: Vyper_contract
  #     startBlock: {{VaultAdapterUSDCStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Strategy
  #     abis:
  #       - name: Vyper_contract
  #         file: ./abis/ethereum/Vault.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferUSDC
  #     file: ./src/mappings/vaultAdapters.ts
  # - kind: ethereum/contract
  #   name: VaultAdapterUSDT
  #   network: {{network}}
  #   source:
  #     address: "{{VaultAdapterUSDTAddress}}"
  #     abi: Vyper_contract
  #     startBlock: {{VaultAdapterUSDTStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Strategy
  #     abis:
  #       - name: Vyper_contract
  #         file: ./abis/ethereum/Vault.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransferUSDT
  #     file: ./src/mappings/vaultAdapters.ts

    # "VaultAdapterDAIAddress": "0x277947d84a2ec370a636683799351acef97fec60",
    # "VaultAdapterDAIStartBlock": 12831532,
    # "VaultAdapterUSDCAddress": "0x9b2688da7d80641f6e46a76889ea7f8b59771724",
    # "VaultAdapterUSDCStartBlock": 12831541,
    # "VaultAdapterUSDTAddress": "0x6419cb544878e8c4faa5eaf22d59d4a96e5f12fa",
    # "VaultAdapterUSDTStartBlock": 12831547